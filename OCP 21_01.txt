
╭───────────────────────────────────────────────────────────────────╮
│                                                                   │
│   Package & Deploy Code | Expose | Reflection | Dependencies |    │
│   Run/Execute | Service | Provider | Consumer   │                 │
│   Package & Deploy Code | Expose | Reflection | Dependencies |    │
│   Run/Execute | Service | Provider | Consumer                     │
│                                                                   │
│   Compilation | Modular Jar | Non-Modular Jar | Runtime Images |  │
│   Unnamed Module | Automatic Module                               │
│                                                                   │
╰───────────────────────────────────────────────────────────────────╯

Class* ⇒ Package(s) ⇒ .jar

OSS: Open Source Software
JAR Hell: Complex chain of dependencies and minimum versions
JPMS: Java Platform Module System
    ○ Group(s) of related Packages → Set of functionality
    ○ Similar to a JAR
    ○ Ability to choose which packages are accessible outside the module

    ▫ Modular JAR files
    ▫ Modular Partitioning of the JDK
    ▫ Additional command-line options for Java tools

• Module ⇒ Package(s) + module-info.java
• Module Declaration: Contents of module-info.java
• Dependency: One module relies on another

Problems Modules are Designed to Solve
    ○ Better access control
    ○ Clearer Dependency Management
    ○ Custom Java builds
    ○ Improved security
    ○ Improved performance
    ○ Unique package enforcement

Module vs. Class
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
There are a few key differences between a module declaration and a regular
Java class declaration:
    •   Placed in the "Root Dir". Java classes are placed in packages
    •   Declaration keyword - module instead of class, enum, interface
    •   Follows naming rules for package names. Can have periods.

Compilation & Packaging Example
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
Example - "feeding"

    mods
    feeding
        ↳zoo
            ↳animal
                ↳feeding
                    Task.java
        ↳module-info.java

    Compilation:
        javac --module-path mods -d feeding feeding/zoo/animal/feeding/*.java
        feeding/module-info.java

    Files can be compiled invividually or using a wildcard (all files in a
    sub-directory).

    module-path:
        •   Equivalent to classpath in a modular program.
        •   -p or --module-path
    NOTE: In this example, module-path couldhave been omitted since there are no
    dependencies.

Side Note: Classpath can be represented as
    -cp
    -classpath
    --class-path

jar -cvf mods\zoo.animal.feeding.jar -C feeding .

javac -p mods -d care
    care\zoo\animal\care\details\*.java
    care\zoo\animal\care\medical\*.java
    care\module-info.java

source_code>jar -cvf mods/zoo.animal.care.jar -C care\ .
source_code>jar -cvf mods/zoo.animal.talks.jar -C talks\ .
source_code>jar -cvf mods/zoo.staff.jar -C staff\ .

Module Declarations
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
    • exports
    • requires
    • opens
    • provides
    • uses

Order of declaration DOES NOT matter

Exporting a Package
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
export a package to a specific module
    exports <package-name> to <allowed-package>;
important to consider future use

Exporting a package → All public classes, interfaces,
enums, and ❓records❓are exported. Further, any public and
protected fields and methods in those files are visible.
Fields and methods that are private are not visible because
they are not accessible outside the class. Similarly, package
fields and methods are not visible because they are not
accessible outside the package.


┌───────────┬───────────────────────────────┬───────────────────────────────┐
│ Level     │ Within Module Code            │ Outside Module                │
├───────────┼───────────────────────────────┼───────────────────────────────┤
│ Private   │ Available only within class   │ No access                     │
│ Package   │ Available only within package │ No access                     │
│ Protected │ Available only within package │ Accessible to subclasses      │
│           │ or to subclasses              │ only if package is exported   │
│ Public    │ Available to all classes      │ Accessible only if package    │
│           │                               │ is exported                   │
└───────────┴───────────────────────────────┴───────────────────────────────┘

Requires Transitively
╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌╌
┌───────────────────────────────────┬──────────────────────────────────────────┐
│ requires <another-module-name>	│  Current Module requires				   │
│                                	│  "another-module-name"      			   │
├───────────────────────────────────┼──────────────────────────────────────────┤
│ requires transitive               │  Module(s) that require the 			   │
│     <another-module-name>         │  Current Module will also 			   │
│ 		                            │  		○ Require "another-module-name"	   │
│                                	│  		○ Can "optionally" declare that    │
│                                	│  		  it requires "another-module-name"│
│                                	│  		○ Requires access to			   │
│                                	│  		  "another-module-name"			   │
│                                	│  Current module requires access to	   │
│                                	│  "another-module-name"				   │
└───────────────────────────────────┴──────────────────────────────────────────┘
These rules hold even if the zoo.animal.care and
zoo.animal.talks modules do not explicitly reference any
packages in the zoo.animal.feeding module.

mixing requires and requires transitive ❌
	module bad.module {
		requires zoo.animal.talks;
		requires transitive zoo.animal.talks;
	}


Opening a Package
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
Reflection
	• Inspect and call code at Runtime
	• Allows calling code that might not be available at compile time
	• ⚠ It can even be used to subvert access control!

"opens" Directive
	• enable reflection of a package within a module
	• Since reflection can be dangerous, the module system requires developers 
	to explicitly allow reflection in the module declaration if they want 
	calling modules to be allowed to use it.

	opens <package-name>
	opens <package-name> to <allowed-package>;

	open module <module-name> {
	}
	
	❌ open and opens together
	open module zoo.animal.talks {
		opens zoo.animal.talks.schedule; // DOES NOT COMPILE
	}
	This does not compile because a module that uses the open
	modifier is not permitted to use the opens directive. After all,
	the packages are already open!

Creating a Service
——————————————————
Service 
	↳ 	An Interface ——➤ Class(es)
	↳	Lookup 
			↓
		Implementations

	Comprises a service Interface, class(es) used by the Interface, Lookup 
	service to find implementation(s) of the service interface.


Service Provider Interface
——————————————————————————
	• Specifies what behavior the service will have
	• A Java object would be considered part of the service if it is referenced 
	by the service interface.
	• 💡A service provider "interface" can be an abstract class rather than an 
	actual interface.
	• Declaration(s): 
		○ exports

Creating a Service Locator
——————————————————————————
	• Find classes that implement the Service Interface
	• Usage of ServiceLoader could be an option
	• The ServiceLoader call is relatively expensive. In a real application, it 
	is best to cache the result.
	• Declaration(s): 
		○ exports
		○ requires
		○ uses
		

	public static List<Tour> findAllTours() {
		List<Tour> tours = new ArrayList<>();
		ServiceLoader<Tour> loader =
		ServiceLoader.load(Tour.class);
		for (Tour tour : loader){
			tours.add(tour);
		}
		return tours;
	}

Invoking from a Consumer

	•	A consumer (or client) is a module that obtains and uses a service.
	•	Obtains service from Service Locator
	• 	Consumer doesn't know anything about the implementations
	• 	Declaration(s): 
		○ requires


Adding a Service Provider
—————————————————————————
	•	Implementation of a service provider interface
	•	Possible to have multiple implementation classes or modules
	•	We don’t export the package that implements the interface since we don’t
	want callers referring to it directly. Instead, we use the provides 
	directive. This allows us to specify that we provide an implementation of 
	the interface with a specific implementation class. The syntax looks like:
		provides <interfaceName> with <className>;
	We have not exported the package containing the implementation. Instead, we 
	have made the implementation available to a service provider using the 
	interface.
	
	• 	Declaration(s): 
		○ requires	
		○ provides with

	Textual Ref.
	Notice how we didn’t recompile the zoo.tours.reservations or
	zoo.visitor package. The service locator was able to observe
	that there was now a service provider implementation
	available and find it for us.
	This is useful when you have functionality that changes
	independently of the rest of the code base. For example, you
	might have custom reports or logging.


TODO: Reviewing Directives and Services
Table 12.4





































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































