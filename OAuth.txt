OAuth 2.0

Furthur Reading:
â€¢	https://oauth.net/2/
â€¢	https://www.udemy.com/course/oauth-2-simplified/?referralCode=B04F59AED67B8DA74FA7&couponCode=NVDPRODUSV220


ðŸ‘‰ Industry-Standard Protocol for Authorization
â€¢ 	Client Developer Simplicity
â€¢ 	Authorization flows for
	â—‹ Web
	â—‹ Desktop
	â—‹ Mobile
	â—‹ Living Room Devices; e.g TVs


Problems and Limitations with Traditional Client-Server Authentication Model â‡’ Access to restricted resource requires resource owner's credentials â‡’ Credentaials need to be shared with third-party apps.

access token -- a string denoting a
   specific scope, 
   lifetime, and 
   other access attributes
issued to third-party clients by an authorization server with the
   approval of the resource owner


Designed for use with HTTP
ðŸ‘‰ The use of OAuth over any protocol other than HTTP is out of scope.

it is the intention of this specification
   that new implementations support OAuth 2.0



https://datatracker.ietf.org/doc/html/rfc6749#section-1.2


	â•­â”€â”€â”€â”€â”€â”€â”€â”€â•®                              	â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
    |        |	--(A)- Authorization Request ->	|      					|
    |        |	                               	|   Resource   Owner 	|
    |        |	<-(B)-- Authorization Grant ---	|               		|
    |        |	                      â€¾â€¾â€¾â€¾â€¾    	â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
    |        |		
    |        |	                               	â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
    |        |	--(C)-- Authorization Grant -->	| 						|
    | Client |	                      â€¾â€¾â€¾â€¾â€¾    	| Authorization Server  |
    |        |	<-(D)----- Access Token -------	|               		|
    |        |	                               	â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯
    |        |		
    |        |	                               	â•­â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•®
    |        |	--(E)----- Access Token ------>	|      					|
    |        |	                               	|   Resource   Server   |
    |        |	<-(F)--- Protected Resource ---	|               		|
    â•°â”€â”€â”€â”€â”€â”€â”€â”€â•¯	                               	â•°â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â•¯

                     Figure 1: Abstract Protocol Flow

   The abstract OAuth 2.0 flow illustrated in Figure 1 describes the
   interaction between the four roles and includes the following steps:

   (A)  The client requests authorization from the resource owner.  The
        authorization request can be made directly to the resource owner
        (as shown), or preferably indirectly via the authorization
        server as an intermediary.

   (B)  The client receives an authorization grant, which is a
        credential representing the resource owner's authorization,
        expressed using one of four grant types defined in this
        specification or using an extension grant type.  The
        authorization grant type depends on the method used by the
        client to request authorization and the types supported by the
        authorization server.

   (C)  The client requests an access token by authenticating with the
        authorization server and presenting the authorization grant.

   (D)  The authorization server authenticates the client and validates
        the authorization grant, and if valid, issues an access token.

   (E)  The client requests the protected resource from the resource
        server and authenticates by presenting the access token.

   (F)  The resource server validates the access token, and if valid,
        serves the request.

   The preferred method for the client to obtain an authorization grant
   from the resource owner (depicted in steps (A) and (B)) is to use the
   authorization server as an intermediary, which is illustrated in
   Figure 3 in Section 4.1.
